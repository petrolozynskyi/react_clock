{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","hasClock","clockName","currentTime","this","window","setInterval","Math","floor","random","setState","Date","toUTCString","slice","console","info","document","addEventListener","event","preventDefault","_","prevState","debug","clearInterval","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"sNAiBO,IAAMA,EAAb,4MACEC,QAAU,EADZ,EAGEC,MAAe,CACbC,UAAU,EACVC,UAAW,UACXC,YAAa,IANjB,uDASE,WAAqB,IAAD,OAClBC,KAAKL,QAAUM,OAAOC,aAAY,WAChC,IAAMJ,EAtBJ,SAAN,OAAgBK,KAAKC,MAAM,IAAAD,KAAKE,UAHpB,KA2BR,EAAKC,SAAS,CACZR,gBAED,MAEHI,aAAY,WACV,GAAI,EAAKN,MAAMC,SAAU,CACvB,IAAME,GAAc,IAAIQ,MAAOC,cAAcC,OAAO,IAAK,GAGzDC,QAAQC,KAAKZ,GACb,EAAKO,SAAS,CACZP,mBAGH,KAEHa,SAASC,iBAAiB,SAAS,WACjC,EAAKP,SAAS,CAAET,UAAU,OAG5Be,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKT,SAAS,CAAET,UAAU,SApChC,gCAwCE,SAAmBmB,EAAoBC,GACrC,IAAQnB,EAAcE,KAAKJ,MAAnBE,UAEJmB,EAAUnB,YAAcA,GAE1BY,QAAQQ,MAAR,uBAA8BD,EAAUnB,UAAxC,eAAwDA,MA7C9D,kCAiDE,WACEG,OAAOkB,cAAcnB,KAAKL,WAlD9B,oBAqDE,WACE,MAA6CK,KAAKJ,MAA1CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,YAE7B,OACE,sBAAKqB,UAAU,MAAf,UACE,6CAECvB,GACC,sBAAKuB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCtB,IAEhC,YAED,sBAAMsB,UAAU,cAAhB,SAA+BrB,cAlE3C,GAA2BsB,IAAMC,WCbpBC,EAAgB,WAC3B,OACE,cAAC,EAAD,KCHJC,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.ef79152d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const min = 1000;\n  const max = 9999;\n\n  return `Clock-${Math.floor(Math.random() * (max - min + 1)) + min}`;\n}\n\ntype Props = {};\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n  currentTime: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId = 0;\n\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    currentTime: '',\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({\n        clockName,\n      });\n    }, 3300);\n\n    setInterval(() => {\n      if (this.state.hasClock) {\n        const currentTime = new Date().toUTCString().slice(-12, -4);\n\n        // eslint-disable-next-line no-console\n        console.info(currentTime);\n        this.setState({\n          currentTime,\n        });\n      }\n    }, 1000);\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault(); // Prevent the default context menu\n      this.setState({ hasClock: false });\n    });\n  }\n\n  componentDidUpdate(_: Readonly<Props>, prevState: Readonly<State>) {\n    const { clockName } = this.state;\n\n    if (prevState.clockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName, currentTime } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{clockName}</strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">{currentTime}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport const App: React.FC = () => {\n  return (\n    <Clock />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}